#BlueJ class context
comment0.params=parser
comment0.target=org.apache.commons.csv.CSVRecord\ coldestHourInAFile(org.apache.commons.csv.CSVParser)
comment1.params=
comment1.target=java.lang.String\ coldestInManyDays()
comment10.params=parser\ value
comment10.target=double\ averageTemperatureWithHighHumidityInFile(org.apache.commons.csv.CSVParser,\ int)
comment11.params=
comment11.target=void\ testAverageTemperatureWithHighHumidityInFile()
comment2.params=currentRow\ largestSoFar
comment2.target=org.apache.commons.csv.CSVRecord\ getLargestOFTwo(org.apache.commons.csv.CSVRecord,\ org.apache.commons.csv.CSVRecord)
comment3.params=
comment3.target=void\ testColdestInFile()
comment4.params=parser
comment4.target=org.apache.commons.csv.CSVRecord\ lowestHumidityInFile(org.apache.commons.csv.CSVParser)
comment5.params=currentRow\ lowestHumiditySoFar
comment5.target=org.apache.commons.csv.CSVRecord\ theLowestHumidityOFTwo(org.apache.commons.csv.CSVRecord,\ org.apache.commons.csv.CSVRecord)
comment6.params=
comment6.target=void\ testLowestHumidityInFile()
comment7.params=
comment7.target=org.apache.commons.csv.CSVRecord\ LowestHumidityInManyFiles()
comment8.params=parser
comment8.target=double\ averageTemperatureInFile(org.apache.commons.csv.CSVParser)
comment9.params=
comment9.target=void\ testAverageTemperatureInFile()
numComments=12
